
- name: Setup Tomcat8 & Deploy Artifact
  hosts: appsrvgrp
  become: yes
  vars:
    # using the TimeStump : this variable we ganna use to create backup file and archive for our artifacts
    timestamp: "{{ansible_date_time.date}}_{{ansible_date_time.hour}}_{{ansible_date_time.minute}}"
  tasks:
    - name: Download latest VProfile.war from nexus
      get_url:
        # exemlpe of url : http://3.84.94.35:8081/repository/release/QA%2F2023-02-38_10-21-04%2FV6%2F2023-02-38_10-21-04-V6.war.md5
        #url: "http://{{USER}}:{{PASS}}@{{nexusip}}:8081/repository/{{reponame}}/{{groupid}}/{{time}}/{{build}}/{{vprofile_version}}"
        # download this url at this location
        url : "http://52.90.36.24:8081/repository/release/QA%2F2023-02-40_01-39-27%2F7%2F2023-02-40_01-39-27-7.war"
        dest: "/tmp/vproapp-{{vprofile_version}}"
      register: wardeploy # to enregister the out put in this variable
      tags:
       - deploy

    - stat: # check the statistics of existing or not of the artifacts in this location
        path: /usr/local/tomcat8/webapps/ROOT
      register: artifact_stat
      tags:
       - deploy
      # if yes then stop tomcat so we can deploy this artifacts
    - name: Stop tomcat svc
      service:
        name: tomcat
        state: stopped
      tags:
       - deploy

    - name: Try Backup and Deploy
      block: #evry play book have a blocks : here is the block for deploying artifacts in tomcat
      - name: Archive ROOT dir with timestamp
        archive:
          path: /usr/local/tomcat8/webapps/ROOT
          dest: "/opt/ROOT_{{timestamp}}.tgz"
        when: artifact_stat.stat.exists # if exists == true then he will take the backup else its empty. 
        register: archive_info
        tags:
         - deploy

      - name: copy ROOT dir with old_ROOT name
        shell: cp -r ROOT old_ROOT
        args:
          chdir: /usr/local/tomcat8/webapps/

      - name: Delete current artifact
        file:
          path: "{{item}}"
          state: absent
        when: archive_info.changed
        loop:
         - /usr/local/tomcat8/webapps/ROOT
         - /usr/local/tomcat8/webapps/ROOT.war
        tags:
         - deploy

      - name: Try deploy artifact else restore from previos old_ROOT
        block:
         - name: Deploy vprofile artifact
           copy:
             src: "/tmp/vproapp-{{vprofile_version}}"
             dest: /usr/local/tomcat8/webapps/ROOT.war
             remote_src: yes
           register: deploy_info
           tags:
            - deploy
        rescue:
          - shell: cp -r old_ROOT ROOT # in case of fail we get the roll back
            args:
              chdir: /usr/local/tomcat8/webapps/

      rescue: #if any thing fale some it's come the rescue stage 
       - name: Start tomcat svc
         service:
          name: tomcat
          state: started

    - name: Start tomcat svc
      service:
        name: tomcat
        state: started
      when: deploy_info.changed
      tags:
       - deploy

    - name: Wait until ROOT.war is extracted to ROOT directory
      wait_for:
        path: /usr/local/tomcat8/webapps/ROOT
      tags:
       - deploy

#    - name: Deploy web configuration file
#      template:
#        src: templates/application.j2
#        dest: /usr/local/tomcat8/webapps/ROOT/WEB-INF/classes/application.properties
#        force: yes
#      notify:
#       - Restart Tomcat
#      tags:
#       - deploy

  handlers:
   - name: Restart Tomcat
     service:
      name: tomcat
      state: restarted
